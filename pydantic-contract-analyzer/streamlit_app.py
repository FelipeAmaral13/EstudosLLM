import streamlit as st
import asyncio
import fitz  # PyMuPDF
from app.agents.contract_agent import analyze_contract_text

st.set_page_config(page_title="An√°lise Jur√≠dica de Contratos", layout="wide")

st.title("‚öñÔ∏è An√°lise Autom√°tica de Contratos Jur√≠dicos")
st.markdown("""
Este sistema utiliza intelig√™ncia artificial para **analisar automaticamente contratos**,
identificando riscos e sugerindo corre√ß√µes com base nas **normas internas da empresa**.

Funcionalidades:
- üìé Compara√ß√£o cl√°usula a cl√°usula com normas internas
- ‚ö†Ô∏è Avalia√ß√£o de risco (baixo, m√©dio, alto)
- üí° Sugest√µes de corre√ß√£o
- üìä Grau de risco geral do contrato
""")

def extrair_texto_pdf(uploaded_file) -> str:
    """Extrai texto de um arquivo PDF usando PyMuPDF."""
    with fitz.open(stream=uploaded_file.read(), filetype="pdf") as doc:
        texto = ""
        for pagina in doc:
            texto += pagina.get_text()
        return texto.strip()

# Entrada de dados
with st.expander("üì§ Enviar Contrato para An√°lise"):
    input_mode = st.radio("Modo de entrada", ["Colar texto manualmente", "Fazer upload de arquivo (.txt ou .pdf)"])

    contrato_texto = ""
    if input_mode == "Colar texto manualmente":
        contrato_texto = st.text_area("Cole abaixo o conte√∫do do contrato", height=300)
    else:
        uploaded_file = st.file_uploader("Selecione o arquivo", type=["txt", "pdf"])
        if uploaded_file:
            if uploaded_file.name.endswith(".txt"):
                contrato_texto = uploaded_file.read().decode("utf-8")
            elif uploaded_file.name.endswith(".pdf"):
                contrato_texto = extrair_texto_pdf(uploaded_file)

# Execu√ß√£o da an√°lise
if contrato_texto:
    if st.button("üîç Executar An√°lise"):
        with st.spinner("Executando an√°lise com modelo de linguagem..."):
            resultado = asyncio.run(analyze_contract_text(contrato_texto))

        st.success("‚úÖ An√°lise conclu√≠da!")

        st.subheader("üìä Resultado da An√°lise")
        st.markdown(f"**üß† Grau de Risco Geral:** `{resultado.overall_risk.upper()}`")

        for idx, clausula in enumerate(resultado.evaluated_clauses):
            with st.expander(f"üìÑ Cl√°usula {idx+1}"):
                st.markdown(f"**Texto da Cl√°usula:**\n```\n{clausula.clause}\n```")
                st.markdown(f"**Risco Avaliado:** `{clausula.risk_level}`")
                st.markdown(f"**Sugest√£o de Corre√ß√£o:** {clausula.suggestion or 'Nenhuma sugest√£o dispon√≠vel.'}")
else:
    st.info("Insira o contrato para iniciar a an√°lise.")
